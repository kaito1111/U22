#pragma once
#include "photon/Common-cpp/inc/JString.h"
#include "photon/LoadBalancing-cpp/inc/Client.h"
#include "myListener.h"
//#include "photon/Demos/shared/inc/OutputListener.h"
class SampleNetworkLogic 
{
//public:
//	/// <summary>
//	/// コンストラクタ
//	/// <para>サーバーの初期化とか</para>
//	/// <para>photonで初期化されてる引数もあるのでわからなくなったら見ること</para>
//	/// </summary>
//	/// <param name="appID">自分のサーバーID</param>
//	/// <param name="appVersion">自分のサーバーバージョン</param>
//	SampleNetworkLogic(const ExitGames::Common::JString& appID, const ExitGames::Common::JString& appVersion);
//	/// <summary>
//	/// 接続
//	/// </summary>
//	void connect(void);
//	/// <summary>
//	/// 切断
//	/// </summary>
//	void disconnect(void);
//	/// <summary>
//	/// 稼働
//	/// </summary>
//	void run(void);
//	
//	virtual void debugReturn(int debugLevel, const ExitGames::Common::JString& string);
//private:
//	ExitGames::LoadBalancing::Client			m_LoadBalancingClient;		//クライアント
//	ExitGames::LoadBalancing::myListener			myListener;					//リスナーの実装(中継地点？)
//	ExitGames::Common::Logger					mLogger;					//EGLOGにアクセス 名前変えたらばぐるよ
};

