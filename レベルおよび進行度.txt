レベルデータで作っているオブジェクト。                
		//岩
		if (wcscmp(objData.name, L"iwa") == 0) {
			auto IwaPtr = new Iwa(
				L"Assets/modelData/iwa.cmo",
				objData.position,
				objData.rotation);
			IwaList.push_back(IwaPtr);
			return true;
		}
		//動く床
		if (wcscmp(objData.name, L"moveFloor") == 0) {
			auto moveFloorPtr = new moveFloor(
				L"Assets/modelData/moveFloor.cmo",
				objData.position,
				objData.rotation);
			moveFloorList.push_back(moveFloorPtr);
			return true;
		}
		//回る鎌
		if (wcscmp(objData.name, L"Huriko") == 0) {
			auto GameObjectScythePtr = new GameObjectScythe(
				L"Assets/modelData/Huriko.cmo",
				objData.position,
				objData.rotation);
			GameObjectScytheList.push_back(GameObjectScythePtr);
			return true;
		}
		//ドッスン
		if (wcscmp(objData.name, L"Dossun") == 0) {
			auto StageObjectDossunPtr = new StageObjectDossun(
				L"Assets/modelData/Dossun.cmo",
				objData.position,
				objData.rotation);
			StageObjectDossunList.push_back(StageObjectDossunPtr);
			return true;
		}
		//下からせりあがってくる何か
		if (wcscmp(objData.name, L"magma") == 0) {
			auto StageObjectMagmaPtr = new StageObjectMagma(
				L"Assets/modelData/magma.cmo",
				objData.position,
				objData.rotation);
			StageObjectMagmaList.push_back(StageObjectMagmaPtr);
			return true;
		}
                //御一人様専用通路
		if (wcscmp(objData.name, L"aStopFloor") == 0) {
			auto stopFloorPtr = new stageObjectStopFloor(
				L"Assets/modelData/aStopFloor.cmo",
				objData.position,
				objData.rotation);
			stopFloorList.push_back(stopFloorPtr);
			return true;
		}

		//ゴール
		if (wcscmp(objData.name, L"Goal") == 0) {
			auto GoalPtr = new Goal(
				L"Assets/modelData/Goal.cmo",
				objData.position,
				objData.rotation);
			goalList.push_back(GoalPtr);
			return true;
		}
進捗パンダ